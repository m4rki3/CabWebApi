// <auto-generated />
using System;
using CabWebApi.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CabWebApi.Infrastructure.Data.Migrations
{
    [DbContext(typeof(CabContext))]
    [Migration("20231129153424_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("PersonSequence");

            modelBuilder.Entity("CabWebApi.Domain.Core.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("RegistrationPlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id")
                        .HasName("PK_Cars_Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("RegistrationPlate")
                        .IsUnique()
                        .HasDatabaseName("IX_Cars_RegistrationPlate");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CabWebApi.Domain.Core.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(8,5)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(8,5)");

                    b.HasKey("Id")
                        .HasName("PK_Locations_Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("CabWebApi.Domain.Core.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("DepartureId")
                        .HasColumnType("int");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<short>("Price")
                        .HasColumnType("smallint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Orders_Id");

                    b.HasIndex("CarId");

                    b.HasIndex("DepartureId")
                        .IsUnique();

                    b.HasIndex("DestinationId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CabWebApi.Domain.Core.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [PersonSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(63)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nchar(12)");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("CabWebApi.Domain.Core.Driver", b =>
                {
                    b.HasBaseType("CabWebApi.Domain.Core.Person");

                    b.Property<long>("DrivingLicense")
                        .HasColumnType("bigint");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Drivers_PhoneNumber");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("CabWebApi.Domain.Core.User", b =>
                {
                    b.HasBaseType("CabWebApi.Domain.Core.Person");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Users_PhoneNumber");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CabWebApi.Domain.Core.Car", b =>
                {
                    b.HasOne("CabWebApi.Domain.Core.Driver", "Driver")
                        .WithMany("Cars")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Cars_DriverId");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("CabWebApi.Domain.Core.Order", b =>
                {
                    b.HasOne("CabWebApi.Domain.Core.Car", "Car")
                        .WithMany("Orders")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Orders_CarId");

                    b.HasOne("CabWebApi.Domain.Core.Location", "Departure")
                        .WithOne("DepartureOrder")
                        .HasForeignKey("CabWebApi.Domain.Core.Order", "DepartureId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Orders_DepartureId");

                    b.HasOne("CabWebApi.Domain.Core.Location", "Destination")
                        .WithOne("DestinationOrder")
                        .HasForeignKey("CabWebApi.Domain.Core.Order", "DestinationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Orders_DestinationId");

                    b.HasOne("CabWebApi.Domain.Core.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Orders_UserId");

                    b.Navigation("Car");

                    b.Navigation("Departure");

                    b.Navigation("Destination");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CabWebApi.Domain.Core.Car", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CabWebApi.Domain.Core.Location", b =>
                {
                    b.Navigation("DepartureOrder")
                        .IsRequired()
                        .HasAnnotation("System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute", null);

                    b.Navigation("DestinationOrder")
                        .IsRequired()
                        .HasAnnotation("System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute", null);
                });

            modelBuilder.Entity("CabWebApi.Domain.Core.Driver", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CabWebApi.Domain.Core.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
